var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
/**
 * Transforms plain old javascript object
 * Entity is constructed based on its entity metadata.
 */
export class DatabaseSubjectsLoader {
    constructor(connection) {
        this.connection = connection;
    }
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    transform(subjectCollection) {
        return __awaiter(this, void 0, void 0, function* () {
            const arrayOfEntities = yield Promise.all(subjectCollection
                .groupByEntityTargets()
                .map(subjectGroup => {
                const allIds = subjectGroup.subjects.map(subject => subject.id);
                const repository = this.connection.getRepository(subjectGroup.target);
                return repository.findByIds(allIds);
            }));
        });
    }
}
//# sourceMappingURL=DatabaseSubjectsLoader.js.map